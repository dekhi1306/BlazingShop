@page "/cart"
@using System.Globalization
@inject ICartService CartService

@if (!orderPlaced)
{
    <h3>Giỏ hàng</h3>
    @if (cartItems == null || cartItems.Count <= 0)
    {
        <span>Không có sản phẩm nào trong giỏ hàng</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                <div class="item-container">
                    <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                    <div class="item-name">
                        <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                        <span>@item.EditionName</span><br />
                        <button class="btn-delete" @onclick="@(() => DeleteItem(item))">Xoá</button>
                        <EditForm Model="item">
                            <InputNumber id="quantity" @bind-Value="item.Quantity"
                                         class="form-control" style="width: 70px" />
                        </EditForm>
                    </div>
                    <div class="item-price">@formatPrice(item.Price * item.Quantity)</div>
                </div>
            }
            <div class="item-price">
                Tổng cộng (@cartItems.Count): @formatPrice(cartItems.Sum(item => item.Price * item.Quantity))
            </div>
            <div style="text-align: center; margin-top: 10px;">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">Đặt hàng</button>
            </div>
        </div>
    }
}
else
{
    <h3>Cảm ơn quý khách đã mua hàng tại 10Perfurm</h3>
    <h4>Những sản phẩm đã đặt:</h4>
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                <div class="item-name">
                    <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                    <span>@item.EditionName</span><br />
                </div>
                <div class="item-price">@formatPrice(item.Price * item.Quantity)</div>
            </div>
        }
        <div class="item-price">
            Tổng cộng (@cartItems.Count): @formatPrice(cartItems.Sum(item => item.Price * item.Quantity))
        </div>
    </div>
}

@code {
    List<CartItem> cartItems = new List<CartItem>();
    bool orderPlaced = false;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async Task PlaceOrder()
    {
        orderPlaced = true;
        await CartService.EmptyCart();
    }

    private string formatPrice(decimal price)
    {
        string VietFormat = price.ToString("C", CultureInfo.CreateSpecificCulture("vi-VN"));
        string[] tmp;
        string res = "";

        tmp = VietFormat.Split('D');
        res = tmp[1] + " VNĐ";
        return res;
    }
}
